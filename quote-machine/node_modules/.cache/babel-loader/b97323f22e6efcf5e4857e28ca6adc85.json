{"ast":null,"code":"import _classCallCheck from \"D:\\\\Tiago\\\\Projects\\\\react-apps\\\\quote-machine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Tiago\\\\Projects\\\\react-apps\\\\quote-machine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Tiago\\\\Projects\\\\react-apps\\\\quote-machine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Tiago\\\\Projects\\\\react-apps\\\\quote-machine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Tiago\\\\Projects\\\\react-apps\\\\quote-machine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Tiago\\\\Projects\\\\react-apps\\\\quote-machine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Tiago\\\\Projects\\\\react-apps\\\\quote-machine\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport QuoteBox from './QuoteBox.js';\nimport quotes from './quotes.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      quote: quotes[Math.floor(Math.random() * quotes.length)]\n    };\n    _this.showNewQuote = _this.showNewQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"showNewQuote\",\n    value: function showNewQuote() {\n      // let quote = quotes[Math.floor(Math.random() * quotes.length)];\n      // Get another random quote if the quote is the same as the previous one\n      while (true) {\n        var randomIndex = Math.floor(Math.random() * quotes.length);\n        console.log(quotes[randomIndex]);\n\n        if (quotes[randomIndex].text !== this.state.quote.text) {\n          this.setState({\n            quote: quotes[randomIndex]\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Random Quote Machine\"), React.createElement(\"div\", {\n        className: \"App-react-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"React App\"), React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }))), React.createElement(QuoteBox, {\n        quote: this.state.quote,\n        newQuoteHandler: this.showNewQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\Tiago\\Projects\\react-apps\\quote-machine\\src\\App.js"],"names":["React","Component","QuoteBox","quotes","App","props","state","quote","Math","floor","random","length","showNewQuote","bind","randomIndex","console","log","text","setState","logo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IAEMC,G;;;;;AACL,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAEJ,MAAM,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,MAAM,CAACQ,MAAlC,CAAD;AADD,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AANkB;AAOlB;;;;mCAEc;AACd;AACA;AACA,aAAO,IAAP,EAAa;AACZ,YAAIC,WAAW,GAAGN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,MAAM,CAACQ,MAAlC,CAAlB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACW,WAAD,CAAlB;;AACA,YAAIX,MAAM,CAACW,WAAD,CAAN,CAAoBG,IAApB,KAA6B,KAAKX,KAAL,CAAWC,KAAX,CAAiBU,IAAlD,EAAwD;AACvD,eAAKC,QAAL,CAAc;AACbX,YAAAA,KAAK,EAAEJ,MAAM,CAACW,WAAD;AADA,WAAd;AAGA;AACA;AACD;AACD;;;6BAEQ;AACR,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,EAEC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,GAAG,EAAEK,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFD,EAGC;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CAFD,CADD,EASC,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAA5B;AAAmC,QAAA,eAAe,EAAE,KAAKK,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATD,CADD;AAaA;;;;EAvCgBX,S;;AA0ClB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport QuoteBox from './QuoteBox.js';\r\nimport quotes from './quotes.js';\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tquote: quotes[Math.floor(Math.random() * quotes.length)]\r\n\t\t};\r\n\r\n\t\tthis.showNewQuote = this.showNewQuote.bind(this);\r\n\t}\r\n\r\n\tshowNewQuote() {\r\n\t\t// let quote = quotes[Math.floor(Math.random() * quotes.length)];\r\n\t\t// Get another random quote if the quote is the same as the previous one\r\n\t\twhile (true) {\r\n\t\t\tlet randomIndex = Math.floor(Math.random() * quotes.length);\r\n\t\t\tconsole.log(quotes[randomIndex]);\r\n\t\t\tif (quotes[randomIndex].text !== this.state.quote.text) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tquote: quotes[randomIndex]\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-header\">\r\n\t\t\t\t\t<h1 className=\"App-title\">Random Quote Machine</h1>\r\n\t\t\t\t\t<div className=\"App-react-app\">\r\n\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t\t\t\t<h2 className=\"App-intro\">React App</h2>\r\n\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\t\t\t\t<QuoteBox quote={this.state.quote} newQuoteHandler={this.showNewQuote} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}